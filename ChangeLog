2008-10-04  Scott Peterson  <lunchtimemama@gmail.com>

  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Program.cs:
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Sharpener.cs:
  Renamed file.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/CodeMonkey.cs:
  Added an overload and a Close() method to close the underlying
  stream.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/ClientRunner.cs:
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Runner.cs:
  Abstracted some stuff from ClientRunner into Runner.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/ServerRunner.cs:
  Added a server runner.
  
  * src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
  Added DefaultValue property which proxies
  RelatedStateVariable.DefaultValue.

2008-10-03  Scott Peterson  <lunchtimemama@gmail.com>

	Forgive the lame ChangeLog entry, but this is a big update with
	lots of work. I'd catalog everything, but I won't. Sorry. I suck.
	I know. This adds the server stuff. It's really just sketched out,
	but you can run a server and a client and they talk to each other!

2008-09-26  Alan McGovern  <amcgovern@novell.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	Fixed race condition when executing a task. The remove/add needs to
	be an atomic operation otherwise multiple TimerThreads can be spawned

2008-09-19  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.MediaServer/*: Stubbed out some
	MediaServer1 stuff
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/*: Started a little project
	to automatically generate C# source code from UPnP DCP XML files
	
	* src/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs: Made
	StateVariableChangedArgs generic and added support for the
	sendEventsAttribute elemen which appears in DCP XML files
	
	* src/Mono.Upnp.Client/Mono.Upnp.Control/StateVariableChangedArgs.cs:
	Moved and made generic
	
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultDeviceFactory.cs:
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultServiceFactory.cs:
	Default implimentations of the new factory interfaces
	
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/Helper.cs: Added some new
	helper functions. I think they may still need tweaking - I found a
	bug in the .NET BCL:
	https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=368387
	
	* src/Mono.Upnp.Client/Mono.Upnp/Client.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/Device.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/Root.cs:
	src/Mono.Upnp.Client/Mono.Upnp/Service.cs: Reworked to add preliminary
	support for new factory interfaces
	
	* src/Mono.Upnp.Client/Mono.Upnp/IDeviceFactory.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/IServiceFactory.cs: Added factory
	interfaces
	
	 * src/Mono.Upnp.Client/Mono.Upnp/UpnpArgs.cs: Added some generics

2008-09-18  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/TimeoutDispatcher.cs:
	Fixed race condition

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Client/StateVariable.cs:
	Removed the ability to fetch variable value since that is a depricated API
	and added events support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs:
	Implimented event subscription using HttpListener

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/Protocol.cs:
	Some new constants

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/SoapAdapter.cs:
	Got rid of StateVariable value fetching support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Client.cs: Whitespace
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Service: Events support

2008-09-17  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	Got rid of some unnessisary concurrency cruft, fixed drift and
	implimented IDisposable (thanks alan!)

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
	Tweaked ToString()

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs:
	Preparing for event support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/UpnpControlException.cs:
	We won't die if the return code is unrecognized.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/UpnpControlExceptionStatus.cs:
	Added Unknown value

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs:
	Added what will be the event support class. Doesn't  do anything right now

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/TimeoutDispatcher.cs:
	Copied from Mono.Ssdp.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Client.cs:
	Added a little essay at the top of the file on its workings.

2008-09-16  Scott Peterson  <lunchtimemama@gmail.com>

	Added initial SSDP server capabilities and UPnP client capabilities.
	VERY EXPERIMENTAL!

2008-07-22  Aaron Bockover  <abock@gnome.org>
	
	* src/Mono.Ssdp.ConsoleClient/Mono.Ssdp.ConsoleClient/ConsoleClient.cs:
	Implemented a proper console client that supports browsing against multiple
	search targets and verbose logging

	* docs/en/Mono.Ssdp/Service.xml:
	* docs/en/Mono.Ssdp/BrowseService.xml:
	* docs/en/Mono.Ssdp/Browser.xml:
	* docs/en/Mono.Ssdp/Client.xml:
	* docs/en/index.xml: Updated docs

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Log.cs: Fix compile

2008-07-22  Aaron Bockover  <abock@gnome.org>

	* src/Mono.Ssdp/Mono.Ssdp/Client.cs: Added a static StrictProtocol bool
	that can disable the strict implementation of the SSDP protocol; turning
	strict off might be necessary in some cases if a user finds that the
	UPnP devices they're interacting with don't actually implement SSDP \
	properly

	* src/Mono.Ssdp/Mono.Ssdp/Service.cs: Split Service into a base Service
	class and moved browse specific code to BrowseService; make Location a
	collection/enumerable since multiple Locations can be specified

	* src/Mono.Ssdp/Mono.Ssdp/BrowseService.cs: Implement proper Location/AL
	parsing and strict header parsing per the SSDP 'spec' as documented in
	the UPnP Design by Example book from Intel Press

	* src/Mono.Ssdp/Mono.Ssdp/Browser.cs:
	* src/Mono.Ssdp/Mono.Ssdp.Internal/NotifyListener.cs: Added exception
	handling and throwing for when datagrams can't be parsed

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Log.cs: Added a basic logger so we
	don't just silently dismiss excetions; logger can be enabled by setting
	MONO_SSDP_DEBUG environment variable

	* src/Mono.Ssdp/Mono.Ssdp.Internal/ServiceCache.cs: Do proper 
	merge/updating with GENA NOTIFY service datagrams instead of creating
	a new service

2008-07-21  Aaron Bockover  <abock@gnome.org>

	* src/Mono.Ssdp/Mono.Ssdp/Client.cs: Add ServiceTypeRegistered method
	returning true if an NT/ST value has been registered by a browser child

	* src/Mono.Ssdp/Mono.Ssdp/Service.cs: Support expiration by parsing the
	'Cache-Control: max-age=SEC' header or the 'Expires' header

	* src/Mono.Ssdp/Mono.Ssdp.Internal/NotifyListener.cs: Do not register
	services that come in via NOTIFY if a browse has not been created for 
	the service type in question

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Protocol.cs: Create a const for ssdp:all

	* src/Mono.Ssdp/Mono.Ssdp.Internal/ServiceCache.cs: Register service
	expiration timeouts with the new TimeoutDispatcher and expire them if
	they ever time out

	* src/Mono.Ssdp/Mono.Ssdp.Internal/TimerDispatcher.cs: Support handler
	re-registration and cancelation

	* src/Mono.Ssdp.ConsoleClient/Mono.Ssdp.ConsoleClient/ConsoleClient.cs:
	Show timestamps for debugging

2008-07-20  Aaron Bockover  <abockover@novell.com>

	* Mono.Ssdp: Initial Import

