2009-02-08  Scott Peterson  <lunchtimemama@gmail.com>

	* Mono.Upnp.sln: 

	* HACKING: Started a HACKING file for writing down general
	stuff

2008-10-10  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.MediaServer/Mono.Upnp.Dcp.MediaServer1.Client/*:
	Stubbed out some stuff for the MediaServer API.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Action.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/AllowedValueRange.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Device.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Icon.cs:
	Added immutability checks and simplified Equals and GetHashCode.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs:
	Added immutability checks, simplified Equals and GetHashCode,
	delayed type determination, and moved type deserialization logic
	to the service.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Service.cs:
	Moved in state variable type deserialization logic and changed
	to pretty switch statement to an ugly if/else mess to ensure
	grace under fire.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/ReadOnlyDictionary.cs:
	Made dictionary readonly and fixed Equals.

	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/UpnpServer.cs:
	Got rid of unnessisary Expect100Continue assignment.

2008-10-09  Scott Peterson  <lunchtimemama@gmail.com>

	Added licenses to a lot of files.

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/Protocol.cs:
	Tweaked HTTP headers.
	
	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/SsdpSocket.cs:
	Tweaked constructor.
	
	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp/Announcer.cs: No longer
	impliments IDisposable (because it has no unmanaged resources).
	Also changed Stopping. The public Stop() method is synchronous
	so that it blocks on sending the "bye-bye" message. There is
	also an internal StopAsync() method which returns a WaitHandle.
	That way the sever can stop all of its announcers concurrently
	and then WaitHandle.WaitAll on all of their handles.
	
	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp/Server.cs: Changed how
	stopping is accomplished. Stop() now blocks on all announcers
	having sent "bye-bye" messages (though the announcers send
	their messages concurrently).

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.MediaServer/*:
	Stubbed out the MediaServer 1.0 protocol using auto-generated
	source files made with Sharpener.

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/ClientRunner.cs:
	Updated to reflect API changes. Also added contract verification
	generation.

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/CodeMonkey.cs:
	Added WriteLine override to take params object [].
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/OfflineAction.cs:
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/OfflineStateVariable.cs:
	Added special subclasses of Action and StateVariable to look for
	the "Optional" XML element.
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/OfflineService.cs:
	Use the new OfflineAction and OfflineStateVariable classes.
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/Runner.cs:
	Moved camel casing code in from ServerRunner. Also added enumeration
	name simplification logic.
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/ServerRunner.cs:
	Removed camel casing code and other fixes.
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Mono.Upnp.Dcp.Sharpener/Sharpener.cs:
	Changes for testing.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Action.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs:
	Refactored constructors, added dispose logic, overrided
	some object methods, and refactored verification.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/AllowedValueRange.cs:
	Refactored verification and overrided some object methods.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
	Refactored constructors, overrided some object methods, and
	refactored verification.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultDeviceFactory.cs:
	Updated to reflect change from IDeviceFactory to DeviceFactory.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultServiceFactory.cs:
	Updated to reflect change from IServiceFactory to ServiceFactory.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs
	If we timeout while trying to connect to the eventing server, it
	might be because the UPnP service fell off the network, so we add
	the ability to check that.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/Helper.cs:
	Better factory selection when instantiating devices.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/UpnpDeserializationException.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/UpnpDeserializationException.cs:
	Moved and made public.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Client.cs:
	Added support for disposing of devices and services both
	when they announce their departure and when they silently
	fall off the network. This needs testing.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Device.cs:
	Refactored constructors and verification, overrided some
	object methods, added disposal logic, and better factory
	selection when instantiating services.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/IDeviceFactory.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/DeviceFactory.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/IServiceFactory.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/ServiceFactory.cs:
	Renamed. These are now abstract classes so that we can include
	conditional contract verification. Factories can be used to
	instantiate services and devices, but to verify that the devices
	and services actually impliment all of the required members of
	their type, it is nessisary to make an HTTP request. We let the
	user descide if they want HTTP requests automatically made to
	verify the completeness of a server or device.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Icon.cs: Refactored
	constructor and verification logic, added disposal checks and
	object method overrides.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/ReadOnlyDictionary.cs:
	Added object method overrides.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Root.cs: Minor
	refactoring.
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Service.cs: Refactoring
	of constructors, verification logics, and more. Added disposal
	logic and object method overrides.
	 
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/TypeInfo.cs: Style fixes.

	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/ActionServer.cs:
	Added fault logic.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/IconServer.cs:
	Added server for device icons.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/Subscriber.cs:
	Got rid of this vistigial class from API designs past.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/UpnpServer.cs:
	Added new constructor and protection against ill-behavied clients.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Device.cs:
	Added checks to make sure things aren't changed after the device
	is live, added icon server, and not longer impliments IDisposable.

	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Icon.cs:
	Filled in icon class. It take metadata and either a byte array
	or a file name. Delays reading from disk until there is a request.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Server.cs:
	Refactoring dispose patter and some other stuff.

	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Service.cs:
	Refactored Dispose, Start, and Stop methods.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/DeviceType.cs:
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/ServiceType.cs:
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/TypeInfo.cs:
	Added constructor.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/UpnpControlException.cs:
	New exception type for control problems.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/UpnpException.cs:
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/UpnpServerException.cs:
	Renamed to avoid confusion with new UpnpControlException.

2008-10-04  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/ServerRunner.cs:
	Fixed the event declaration type.
	
	* src/Mono.Upnp.Client/Mono.Upnp.Control/Action.cs:
	Deserialize the return argument.
	
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs:
	Choose port randomly, keep one HttpListener around until Dispose.
	
	* src/Mono.Upnp.Client/Mono.Upnp/Service.cs: Moved collection
	instantiation out of Deserialize ().
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/ActionServer.cs:
	Debrief return argument.

	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/EventServer.cs:
	Use async GetResponse and we remove subscribers after they fail to
	connect twice in a row.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server.Internal/UpnpServer.cs:
	Turn off Expect100Continue.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Action.cs:
	Exposed ReturnArgument, fixed bug.
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/Service.cs:
	Throw an exception if UpnpStateVariableAttribute is used on
	a non-public event (because we cannot subscribe a delegate to it).
	
	* src/Mono.Upnp/Mono.Upnp.Server/Mono.Upnp.Server/StateVariable.cs:
	Fixed event delegate registration.

2008-10-04  Scott Peterson  <lunchtimemama@gmail.com>

  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Program.cs:
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Sharpener.cs:
  Renamed file.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/CodeMonkey.cs:
  Added an overload and a Close() method to close the underlying
  stream.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/ClientRunner.cs:
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/Runner.cs:
  Abstracted some stuff from ClientRunner into Runner.
  
  * src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/ServerRunner.cs:
  Added a server runner.
  
  * src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
  Added DefaultValue property which proxies
  RelatedStateVariable.DefaultValue.

2008-10-03  Scott Peterson  <lunchtimemama@gmail.com>

	Forgive the lame ChangeLog entry, but this is a big update with
	lots of work. I'd catalog everything, but I won't. Sorry. I suck.
	I know. This adds the server stuff. It's really just sketched out,
	but you can run a server and a client and they talk to each other!

2008-09-26  Alan McGovern  <amcgovern@novell.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	Fixed race condition when executing a task. The remove/add needs to
	be an atomic operation otherwise multiple TimerThreads can be spawned

2008-09-19  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.MediaServer/*: Stubbed out some
	MediaServer1 stuff
	
	* src/Mono.Upnp.Dcp/Mono.Upnp.Dcp.Sharpener/*: Started a little project
	to automatically generate C# source code from UPnP DCP XML files
	
	* src/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs: Made
	StateVariableChangedArgs generic and added support for the
	sendEventsAttribute elemen which appears in DCP XML files
	
	* src/Mono.Upnp.Client/Mono.Upnp.Control/StateVariableChangedArgs.cs:
	Moved and made generic
	
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultDeviceFactory.cs:
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/DefaultServiceFactory.cs:
	Default implimentations of the new factory interfaces
	
	* src/Mono.Upnp.Client/Mono.Upnp.Internal/Helper.cs: Added some new
	helper functions. I think they may still need tweaking - I found a
	bug in the .NET BCL:
	https://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=368387
	
	* src/Mono.Upnp.Client/Mono.Upnp/Client.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/Device.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/Root.cs:
	src/Mono.Upnp.Client/Mono.Upnp/Service.cs: Reworked to add preliminary
	support for new factory interfaces
	
	* src/Mono.Upnp.Client/Mono.Upnp/IDeviceFactory.cs:
	* src/Mono.Upnp.Client/Mono.Upnp/IServiceFactory.cs: Added factory
	interfaces
	
	 * src/Mono.Upnp.Client/Mono.Upnp/UpnpArgs.cs: Added some generics

2008-09-18  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/TimeoutDispatcher.cs:
	Fixed race condition

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Client/StateVariable.cs:
	Removed the ability to fetch variable value since that is a depricated API
	and added events support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs:
	Implimented event subscription using HttpListener

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/Protocol.cs:
	Some new constants

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/SoapAdapter.cs:
	Got rid of StateVariable value fetching support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Client.cs: Whitespace
	
	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Service: Events support

2008-09-17  Scott Peterson  <lunchtimemama@gmail.com>

	* src/Mono.Ssdp/Mono.Ssdp/Mono.Ssdp.Internal/TimeoutDispatcher.cs:
	Got rid of some unnessisary concurrency cruft, fixed drift and
	implimented IDisposable (thanks alan!)

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/Argument.cs:
	Tweaked ToString()

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/StateVariable.cs:
	Preparing for event support

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/UpnpControlException.cs:
	We won't die if the return code is unrecognized.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Control/UpnpControlExceptionStatus.cs:
	Added Unknown value

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/EventSubscriber.cs:
	Added what will be the event support class. Doesn't  do anything right now

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp.Internal/TimeoutDispatcher.cs:
	Copied from Mono.Ssdp.

	* src/Mono.Upnp/Mono.Upnp.Client/Mono.Upnp/Client.cs:
	Added a little essay at the top of the file on its workings.

2008-09-16  Scott Peterson  <lunchtimemama@gmail.com>

	Added initial SSDP server capabilities and UPnP client capabilities.
	VERY EXPERIMENTAL!

2008-07-22  Aaron Bockover  <abock@gnome.org>
	
	* src/Mono.Ssdp.ConsoleClient/Mono.Ssdp.ConsoleClient/ConsoleClient.cs:
	Implemented a proper console client that supports browsing against multiple
	search targets and verbose logging

	* docs/en/Mono.Ssdp/Service.xml:
	* docs/en/Mono.Ssdp/BrowseService.xml:
	* docs/en/Mono.Ssdp/Browser.xml:
	* docs/en/Mono.Ssdp/Client.xml:
	* docs/en/index.xml: Updated docs

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Log.cs: Fix compile

2008-07-22  Aaron Bockover  <abock@gnome.org>

	* src/Mono.Ssdp/Mono.Ssdp/Client.cs: Added a static StrictProtocol bool
	that can disable the strict implementation of the SSDP protocol; turning
	strict off might be necessary in some cases if a user finds that the
	UPnP devices they're interacting with don't actually implement SSDP \
	properly

	* src/Mono.Ssdp/Mono.Ssdp/Service.cs: Split Service into a base Service
	class and moved browse specific code to BrowseService; make Location a
	collection/enumerable since multiple Locations can be specified

	* src/Mono.Ssdp/Mono.Ssdp/BrowseService.cs: Implement proper Location/AL
	parsing and strict header parsing per the SSDP 'spec' as documented in
	the UPnP Design by Example book from Intel Press

	* src/Mono.Ssdp/Mono.Ssdp/Browser.cs:
	* src/Mono.Ssdp/Mono.Ssdp.Internal/NotifyListener.cs: Added exception
	handling and throwing for when datagrams can't be parsed

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Log.cs: Added a basic logger so we
	don't just silently dismiss excetions; logger can be enabled by setting
	MONO_SSDP_DEBUG environment variable

	* src/Mono.Ssdp/Mono.Ssdp.Internal/ServiceCache.cs: Do proper 
	merge/updating with GENA NOTIFY service datagrams instead of creating
	a new service

2008-07-21  Aaron Bockover  <abock@gnome.org>

	* src/Mono.Ssdp/Mono.Ssdp/Client.cs: Add ServiceTypeRegistered method
	returning true if an NT/ST value has been registered by a browser child

	* src/Mono.Ssdp/Mono.Ssdp/Service.cs: Support expiration by parsing the
	'Cache-Control: max-age=SEC' header or the 'Expires' header

	* src/Mono.Ssdp/Mono.Ssdp.Internal/NotifyListener.cs: Do not register
	services that come in via NOTIFY if a browse has not been created for 
	the service type in question

	* src/Mono.Ssdp/Mono.Ssdp.Internal/Protocol.cs: Create a const for ssdp:all

	* src/Mono.Ssdp/Mono.Ssdp.Internal/ServiceCache.cs: Register service
	expiration timeouts with the new TimeoutDispatcher and expire them if
	they ever time out

	* src/Mono.Ssdp/Mono.Ssdp.Internal/TimerDispatcher.cs: Support handler
	re-registration and cancelation

	* src/Mono.Ssdp.ConsoleClient/Mono.Ssdp.ConsoleClient/ConsoleClient.cs:
	Show timestamps for debugging

2008-07-20  Aaron Bockover  <abockover@novell.com>

	* Mono.Ssdp: Initial Import

